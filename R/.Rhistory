knitr::opts_chunk$set(echo = TRUE)
library(table)
install.packages("table")
install.packages("xts")
PX_LAST=read.csv("PX.Weekly.csv",header=TRUE,na.strings = c("NA","Inf"))
library(xts)
MKT_CAP=read.csv("MKshare.csv",header=TRUE,na.strings = c("NA","Inf"))
PX_LAST=read.csv("PX.Weekly.csv",header=TRUE,na.strings = c("NA","Inf"))
PX_LAST=PX_LAST[,-which(colnames(PX_LAST)=="MBAY")]
MKT_CAP=MKT_CAP[,-which(colnames(MKT_CAP)=="MBAY")]
################################################
##Price
PX.rev=PX_LAST[seq(dim(PX_LAST)[1],1),-1]
row.names(PX.rev)=seq(1:nrow(PX_LAST))
index=apply(PX.rev,2,function(x) min(which(x!=x[1])))
index=index-2
for(i in 1:ncol(PX.rev)){
PX.rev[1:(index[i]),i]=NA
}
MKT_CAP=read.csv("MKshare.csv",header=TRUE,na.strings = c("NA","Inf"))
PX_LAST=read.csv("PX.Weekly.csv",header=TRUE,na.strings = c("NA","Inf"))
PX_LAST=PX_LAST[,-which(colnames(PX_LAST)=="MBAY")]
View(MKT_CAP)
colnames(PX_LAST)=="MBAY"
MKT_CAP=read.csv("MKshare.csv",header=TRUE,na.strings = c("NA","Inf"))
PX_LAST=read.csv("PX.Weekly.csv",header=TRUE,na.strings = c("NA","Inf"))
PX.rev=PX_LAST[seq(dim(PX_LAST)[1],1),-1]
row.names(PX.rev)=seq(1:nrow(PX_LAST))
index=apply(PX.rev,2,function(x) min(which(x!=x[1])))
View(MKT_CAP)
View(PX_LAST)
MKT_CAP=read.csv("MKshare.csv",header=TRUE,na.strings = c("NA","Inf"))
MKT_CAP=read.csv("MKshare.csv",header=TRUE,na.strings = c("NA","Inf"))
PX_LAST=read.csv("PX.Weekly.csv",header=TRUE,na.strings = c("NA","Inf"))
PX.rev=PX_LAST[seq(dim(PX_LAST)[1],1),-1]
row.names(PX.rev)=seq(1:nrow(PX_LAST))
View(PX.rev)
colnames(PX_LAST)=="MBAY"dim(PX_LAST)[1]
dim(PX_LAST)[1]
seq(dim(PX_LAST)[1],1)
View(PX_LAST)
View(PX_LAST)
View(PX.rev)
View(MKT_CAP)
View(PX_LAST)
plot.ts(bm.val)
library(xts)
MKT_CAP=read.csv("MKshare.csv",header=TRUE,na.strings = c("NA","Inf"))
PX_LAST=read.csv("PX.Weekly.csv",header=TRUE,na.strings = c("NA","Inf"))
#PX_LAST=PX_LAST[,-which(colnames(PX_LAST)=="MBAY")]
#MKT_CAP=MKT_CAP[,-which(colnames(MKT_CAP)=="MBAY")]
################################################
##Price
PX.rev=PX_LAST[seq(dim(PX_LAST)[1],1),-1]
row.names(PX.rev)=seq(1:nrow(PX_LAST))
index=apply(PX.rev,2,function(x) min(which(x!=x[1])))
index=index-2
for(i in 1:ncol(PX.rev)){
PX.rev[1:(index[i]),i]=NA
}
PX.rev=PX_LAST[seq(nrow(PX_LAST),1),-1]
row.names(PX.rev)=seq(1:nrow(PX_LAST))
index=apply(PX.rev,2,function(x) min(which(x!=x[1])))
index=index-2
for(i in 1:ncol(PX.rev)){
PX.rev[1:(index[i]),i]=NA
}
for(i in 1:ncol(PX.rev)){
PX.rev[(1:(index[i])),i]=NA
}
index=apply(PX.rev,2,function(x) min(which(x!=x[1])))
index=index-2
index=apply(PX.rev,2,function(x) min(which(x!=x[1]), na.rm = TRUE))
index=apply(PX.rev,2,function(x) min(which(x!=x[1]), na.rm = TRUE))
index
index=index-2
for(i in 1:ncol(PX.rev)){
PX.rev[(1:(index[i])),i]=NA
}
library(xts)
MKT_CAP=read.csv("MKshare.csv",header=TRUE,na.strings = c("NA","Inf"))
PX_LAST=read.csv("PX.Weekly.csv",header=TRUE,na.strings = c("NA","Inf"))
#PX_LAST=PX_LAST[,-which(colnames(PX_LAST)=="MBAY")]
#MKT_CAP=MKT_CAP[,-which(colnames(MKT_CAP)=="MBAY")]
################################################
##Price
PX.rev=PX_LAST[seq(nrow(PX_LAST),1),-1]
row.names(PX.rev)=seq(1:nrow(PX_LAST))
index=apply(PX.rev,2,function(x) min(which(x!=x[1]), na.rm = TRUE))
index=index-2
for(i in 1:ncol(PX.rev)){
if(index[i] != Inf)
{
PX.rev[(1:(index[i])),i]=NA
}
}
PX.clean=PX.rev[seq(dim(PX.rev)[1],1),]
PX.clean=PX.clean[-nrow(PX.clean),]
Dates=as.Date(PX_LAST[,1])[-nrow(PX_LAST)]
PX.clean=as.xts(PX.clean,Dates)
###MarketCap
a=MKT_CAP[-nrow(MKT_CAP),-1]
naindex=!is.na(PX.clean)
naindex=replace(naindex,naindex==0,NA)
MCAP.Clean=a*naindex
MCAP.Clean=as.xts(MCAP.Clean,Dates)
###MarketShare
MKshare=t(apply(MCAP.Clean,1,function(x) x/sum(x,na.rm = T)))
MKshare=as.xts(MKshare)
##Benchmark
stock.daily.ret=diff(PX.clean)/rbind(rep(1,ncol(PX.clean)),as.matrix(PX.clean[-nrow(PX.clean),]))
bm.ret=rowSums(stock.daily.ret*MKshare,na.rm = T)
bm.ret=as.xts(bm.ret,Dates)
bm.val=cumprod(bm.ret+1)
bm.val=as.xts(bm.val,Dates)
plot.ts(bm.val)
#weeklydata
WeeklyDates=Dates[weekdays(Dates)=="Friday"]
MKshare.weekly = MKshare[WeeklyDates,]
PX.weekly=PX.clean[WeeklyDates,]
stock.weekly.ret=diff(PX.weekly)/rbind(rep(1,ncol(PX.weekly)),as.matrix(PX.weekly[-nrow(PX.weekly),]))
bm.weekly.ret=rowSums(stock.weekly.ret*MKshare.weekly,na.rm = T)
bm.weekly.ret=as.xts(bm.weekly.ret,WeeklyDates)
colnames(bm.weekly.ret)="bm_weekly"
bm.weekly.val=cumprod(bm.weekly.ret+1)
plot.ts(bm.weekly.val)
#annualize
stock.ret.annu=(stock.weekly.ret+1)^52-1
bm.ret.annu=(bm.weekly.ret+1)^52-1
##rf
rf.ts=read.csv("WGS10YR.csv",header=T)
index=apply(PX.rev,2,function(x) ifelse((x!=x[1]) != NA, min(which(x!=x[1]), na.rm = TRUE), Inf))
library(xts)
MKT_CAP=read.csv("MKshare.csv",header=TRUE,na.strings = c("NA","Inf"))
PX_LAST=read.csv("PX.Weekly.csv",header=TRUE,na.strings = c("NA","Inf"))
#PX_LAST=PX_LAST[,-which(colnames(PX_LAST)=="MBAY")]
#MKT_CAP=MKT_CAP[,-which(colnames(MKT_CAP)=="MBAY")]
################################################
##Price
PX.rev=PX_LAST[seq(nrow(PX_LAST),1),-1]
row.names(PX.rev)=seq(1:nrow(PX_LAST))
index=apply(PX.rev,2,function(x) ifelse((x!=x[1]) != NA, min(which(x!=x[1]), na.rm = TRUE), Inf))
index=index-2
for(i in 1:ncol(PX.rev)){
if(index[i] != Inf)
{
PX.rev[(1:(index[i])),i]=NA
}
}
index=apply(PX.rev,2,function(x) (ifelse(test = !(is.na(x!=x[1])), yes = min(which(x!=x[1])), no = Inf)))
index=index-2
for(i in 1:ncol(PX.rev)){
if(index[i] != Inf)
{
PX.rev[(1:(index[i])),i]=NA
}
}
library(xts)
MKT_CAP=read.csv("MKshare.csv",header=TRUE,na.strings = c("NA","Inf"))
PX_LAST=read.csv("PX.Weekly.csv",header=TRUE,na.strings = c("NA","Inf"))
#PX_LAST=PX_LAST[,-which(colnames(PX_LAST)=="MBAY")]
#MKT_CAP=MKT_CAP[,-which(colnames(MKT_CAP)=="MBAY")]
################################################
##Price
PX.rev=PX_LAST[seq(nrow(PX_LAST),1),-1]
row.names(PX.rev)=seq(1:nrow(PX_LAST))
index=apply(PX.rev,2,function(x) (ifelse(test = !(is.na(x!=x[1])), yes = min(which(x!=x[1])), no = Inf)))
index=index-2
for(i in 1:ncol(PX.rev)){
if(index[i] != Inf)
{
PX.rev[(1:(index[i])),i]=NA
}
}
PX.clean=PX.rev[seq(dim(PX.rev)[1],1),]
PX.clean=PX.clean[-nrow(PX.clean),]
Dates=as.Date(PX_LAST[,1])[-nrow(PX_LAST)]
PX.clean=as.xts(PX.clean,Dates)
###MarketCap
a=MKT_CAP[-nrow(MKT_CAP),-1]
naindex=!is.na(PX.clean)
naindex=replace(naindex,naindex==0,NA)
MCAP.Clean=a*naindex
MCAP.Clean=as.xts(MCAP.Clean,Dates)
###MarketShare
MKshare=t(apply(MCAP.Clean,1,function(x) x/sum(x,na.rm = T)))
MKshare=as.xts(MKshare)
##Benchmark
stock.daily.ret=diff(PX.clean)/rbind(rep(1,ncol(PX.clean)),as.matrix(PX.clean[-nrow(PX.clean),]))
bm.ret=rowSums(stock.daily.ret*MKshare,na.rm = T)
bm.ret=as.xts(bm.ret,Dates)
bm.val=cumprod(bm.ret+1)
bm.val=as.xts(bm.val,Dates)
plot.ts(bm.val)
#weeklydata
WeeklyDates=Dates[weekdays(Dates)=="Friday"]
MKshare.weekly = MKshare[WeeklyDates,]
PX.weekly=PX.clean[WeeklyDates,]
stock.weekly.ret=diff(PX.weekly)/rbind(rep(1,ncol(PX.weekly)),as.matrix(PX.weekly[-nrow(PX.weekly),]))
bm.weekly.ret=rowSums(stock.weekly.ret*MKshare.weekly,na.rm = T)
bm.weekly.ret=as.xts(bm.weekly.ret,WeeklyDates)
colnames(bm.weekly.ret)="bm_weekly"
bm.weekly.val=cumprod(bm.weekly.ret+1)
plot.ts(bm.weekly.val)
#annualize
stock.ret.annu=(stock.weekly.ret+1)^52-1
bm.ret.annu=(bm.weekly.ret+1)^52-1
##rf
rf.ts=read.csv("WGS10YR.csv",header=T)
beta
beta
beta
rf.ts=read.csv("Benchmark.csv",header=T)
View(rf.ts)
benchmark.data = read.csv("Benchmark.csv",header=T)
View(benchmark.data)
rf.ts = benchmark.data$rf
rf.ts=as.xts(rf.ts[,2],as.Date(rf.ts$Dates,format = "%m/%d/%Y"))
View(benchmark.data)
rf.ts = data.frame(benchmark.data$X, benchmark.data$rf)
rf.ts=as.xts(rf.ts[,2],as.Date(rf.ts$Dates,format = "%m/%d/%Y"))
colnames(rf.ts) <- c("Dates, rf")
rf.ts=as.xts(rf.ts[,2],as.Date(rf.ts$Dates,format = "%m/%d/%Y"))
colnames(rf.ts)="rf"
rf.ts=rf.ts[WeeklyDates]*.01
stock.excess.ret=apply(stock.ret.annu,2,function(x) x-as.numeric(rf.ts))
bm.excess.ret=bm.ret.annu-as.numeric(rf.ts)
stock.excess.ret=as.xts(stock.excess.ret,WeeklyDates)
stock.excess.ret=apply(stock.ret.annu,2,function(x) x-as.numeric(rf.ts))
bm.excess.ret=bm.ret.annu-as.numeric(rf.ts)
View(rf.ts)
rf.ts=as.xts(rf.ts[,2],as.Date(rf.ts$Dates,format = "%m/%d/%Y"))
rf.ts$Dates
rf.ts = data.frame(benchmark.data$X, benchmark.data$rf)
colnames(rf.ts) <- c("Dates, rf")
View(rf.ts)
benchmark.data = read.csv("Benchmark.csv",header=T)
rf.ts = data.frame(benchmark.data$X, benchmark.data$rf)
colnames(rf.ts) <- c("Dates", "rf")
rf.ts=as.xts(rf.ts[,2],as.Date(rf.ts$Dates,format = "%m/%d/%Y"))
colnames(rf.ts)="rf"
rf.ts=rf.ts[WeeklyDates]*.01
stock.excess.ret=apply(stock.ret.annu,2,function(x) x-as.numeric(rf.ts))
bm.excess.ret=bm.ret.annu-as.numeric(rf.ts)
colnames(rf.ts) <- c("Dates", "rf")
rf.ts=as.xts(rf.ts[,2],as.Date(rf.ts$Dates,format = "%m/%d/%Y"))
benchmark.data = read.csv("Benchmark.csv",header=T)
rf.ts = data.frame(benchmark.data$X, benchmark.data$rf)
colnames(rf.ts) <- c("Dates", "rf")
rf.ts=as.xts(rf.ts[,2],as.Date(rf.ts$Dates,format = "%m/%d/%Y"))
colnames(rf.ts)="rf"
rf.ts=rf.ts[WeeklyDates]*0.01
library(xts)
MKT_CAP=read.csv("MKshare.csv",header=TRUE,na.strings = c("NA","Inf"))
PX_LAST=read.csv("PX.Weekly.csv",header=TRUE,na.strings = c("NA","Inf"))
#PX_LAST=PX_LAST[,-which(colnames(PX_LAST)=="MBAY")]
#MKT_CAP=MKT_CAP[,-which(colnames(MKT_CAP)=="MBAY")]
################################################
##Price
PX.rev=PX_LAST[seq(nrow(PX_LAST),1),-1]
row.names(PX.rev)=seq(1:nrow(PX_LAST))
index=apply(PX.rev,2,function(x) (ifelse(test = !(is.na(x!=x[1])), yes = min(which(x!=x[1])), no = Inf)))
index=index-2
for(i in 1:ncol(PX.rev)){
if(index[i] != Inf)
{
PX.rev[(1:(index[i])),i]=NA
}
}
PX.clean=PX.rev[seq(dim(PX.rev)[1],1),]
PX.clean=PX.clean[-nrow(PX.clean),]
Dates=as.Date(PX_LAST[,1])[-nrow(PX_LAST)]
PX.clean=as.xts(PX.clean,Dates)
###MarketCap
a=MKT_CAP[-nrow(MKT_CAP),-1]
naindex=!is.na(PX.clean)
naindex=replace(naindex,naindex==0,NA)
MCAP.Clean=a*naindex
MCAP.Clean=as.xts(MCAP.Clean,Dates)
###MarketShare
MKshare=t(apply(MCAP.Clean,1,function(x) x/sum(x,na.rm = T)))
MKshare=as.xts(MKshare)
##Benchmark
stock.daily.ret=diff(PX.clean)/rbind(rep(1,ncol(PX.clean)),as.matrix(PX.clean[-nrow(PX.clean),]))
bm.ret=rowSums(stock.daily.ret*MKshare,na.rm = T)
bm.ret=as.xts(bm.ret,Dates)
bm.val=cumprod(bm.ret+1)
bm.val=as.xts(bm.val,Dates)
plot.ts(bm.val)
#weeklydata
WeeklyDates=Dates[weekdays(Dates)=="Friday"]
MKshare.weekly = MKshare[WeeklyDates,]
PX.weekly=PX.clean[WeeklyDates,]
stock.weekly.ret=diff(PX.weekly)/rbind(rep(1,ncol(PX.weekly)),as.matrix(PX.weekly[-nrow(PX.weekly),]))
bm.weekly.ret=rowSums(stock.weekly.ret*MKshare.weekly,na.rm = T)
bm.weekly.ret=as.xts(bm.weekly.ret,WeeklyDates)
colnames(bm.weekly.ret)="bm_weekly"
bm.weekly.val=cumprod(bm.weekly.ret+1)
plot.ts(bm.weekly.val)
#annualize
stock.ret.annu=(stock.weekly.ret+1)^52-1
bm.ret.annu=(bm.weekly.ret+1)^52-1
##rf
benchmark.data = read.csv("Benchmark.csv",header=T)
rf.ts = data.frame(benchmark.data$X, benchmark.data$rf)
colnames(rf.ts) <- c("Dates", "rf")
rf.ts=as.xts(rf.ts[,2],as.Date(rf.ts$Dates,format = "%m/%d/%Y"))
colnames(rf.ts)="rf"
rf.ts=rf.ts[WeeklyDates]*0.01
##excess ret
stock.excess.ret=apply(stock.ret.annu,2,function(x) x-as.numeric(rf.ts))
bm.excess.ret=bm.ret.annu-as.numeric(rf.ts)
rf.ts[WeeklyDates]
